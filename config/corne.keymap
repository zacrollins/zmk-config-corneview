/*                KEY POSITIONS

    ╭────────────────────────╮ ╭────────────────────────╮
    │ 0   1   2   3   4   5  │ │ 6   7   8   9   10  11 │
    │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
    │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
    ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
                ╰────────────╯ ╰────────────╯
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/mouse.h>

#define XXX &none
#define ___ &trans

// LAYERS
#define DEF     0
#define NUM     1
#define SYM     2
#define NAV     3
#define FUNC    4
// #define MSE     5

/* MACROS */
#define YSPCP    LA(COMMA)          //Space Previous
#define YSPCN    LA(DOT)            //Space Next
#define MCN      LC(LA(RIGHT))      //Mission Control Next Space
#define MCP      LC(LA(LEFT))       //Mission Control Previous Space
#define SCRN     LG(LS(LC(N4)))     //Screen Shot (clipboard)
#define SCR2     LG(LS(N4))         //Screen Shot (save)
#define ZMIN     LG(EQUAL)          //Zoom in
#define ZOUT     LG(MINUS)          //Zoom out
#define TABN     LS(LG(RBKT))       //Tab next
#define TABP     LS(LG(LBKT))       //Tab previous
#define BACK     LG(LBKT)           //Back
#define FWD      LG(RBKT)           //Forward
#define VSCC     LG(BSLH)           //Comment vs code
#define MUTE     LG(LS(M))          //Mute
#define HYPER    LC(LA(LGUI))       //Hyper
#define MEH      LS(LC(LA))         //Meh

/* Global settings */

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define KEYS_THUMBS 36 37 38 39 40 41 42

#define QUICK_TAP_MS 175

&mt {
    tapping-term-ms = <150>;
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/ {

    /* include combos file */
    #include "combos.dtsi"

    conditional_layers {
        compatible = "zmk,conditional-layers";
        // Define FUN layer as tri-state
        tri_layer {
            if-layers = <NUM SYM>;
            then-layer = <FUNC>;
        };
    };

    behaviors {
        hml: homerow_mods_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_L";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R KEYS_THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hmr: homerow_mods_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_R";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L KEYS_THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hmr_lpar: hmr_combo_lpar {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_COMBO_LPAR";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L KEYS_THUMBS>;
            hold-trigger-on-release;
        };

        hmr_rpar: hmr_combo_rpar {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_COMBO_RPAR";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L KEYS_THUMBS>;
            hold-trigger-on-release;
        };

        bs_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lt_bspc: lt_bspc_del {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_BACKSPACE_DELETE";
            #binding-cells = <2>;
            bindings = <&mo>, <&bs_del>;
            tapping-term-ms = <200>;
        };

        // Swapper for smart alt+tab
        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
            ignored-key-positions = <29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEF";
            bindings = <
//    ╭─────────────┬─────────────┬─────────────┬───────────────┬───────────────┬────────────────╮    ╭─────────────────┬────────────────┬──────────────┬────────────────┬────────────────┬──────────────╮
//    │     TAB     │      Q      │      W      │  &hml MEH E   │      R        │        T       │    │       Y         │      U         │  &hmr MEH I  │        O       │        P       │    BS_DEL    │
//    ├─────────────┼─────────────┼─────────────┼───────────────┼───────────────┼────────────────┤    ├─────────────────┼────────────────┼──────────────┼────────────────┼────────────────┼──────────────┤
//    │  LCTRL ESC  │ &hml LALT A │ &hml CTRL S │ &hml LGUI D   │ &hml LSHFT F  │        G       │    │       H         │ &hmr RSHFT J   │ &hmr RGUI K  │ &hmr RCTRL L   │ &hmr RALT ;    │       '      │
//    ├─────────────┼─────────────┼─────────────┼───────────────┼───────────────┼────────────────|    |─────────────────┼────────────────┼──────────────┼────────────────┼────────────────┼──────────────┤
//    │    LSHFT    │      Z      │      X      │      C        │      V        │        B       │    │       N         │        M       │      ,       │       .        │        /       │     ENTER    │
//    ╰─────────────┴─────────────┴─────────────┼───────────────┼───────────────┼────────────────|    |─────────────────┼────────────────┼──────────────┼────────────────┴────────────────┴──────────────╯
//                                              │ &mt HYPER ESC │ &lt NAV RET   │  &lt NUM TAB   │    |  &lt_bspc SYM   │     SPACE      │   CAPS_WORD  │
//                                              ╰───────────────┴───────────────┴────────────────╯    ╰─────────────────┴────────────────┴──────────────╯
    &kp TAB        &kp Q        &kp W         &hml MEH E    &kp R           &kp T       &kp Y   &kp U           &hmr MEH Imiryoku      &kp O           &kp P           &bs_del
    &mt LCTRL ESC  &hml LALT A  &hml LCTRL S  &hml LGUI D   &hml LSHFT F    &kp G       &kp H   &hmr RSHFT J    &hmr RGUI K     &hmr RCTRL L    &hmr RALT SEMI  &kp SQT
    &kp LSHFT      &kp Z        &kp X         &kp C         &kp V           &kp B       &kp N   &kp M           &kp COMMA       &kp DOT         &kp FSLH        &kp RET
                                            &mt HYPER ESC  &lt NAV RET   &lt NUM TAB        &lt_bspc SYM 0   &kp SPACE      &caps_word
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
//    ╭──────┬──────┬──────┬──────┬──────┬──────╮    ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    │      │      │      │      │      │      │    │   [  │   7  │   8  │   9  │   ]  │      │
//    ├──────┼──────┼──────┼──────┼──────┼──────┤    ├──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │ LALT │ LCTRL│ LGUI │ LSHFT│      │    │   +  │   4  │   5  │   6  │   :  │      │
//    ├──────┼──────┼──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │      │      │      │      │      │    │   \  │   1  │   2  │   3  │   =  │      │
//    ╰──────┴──────┴──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┴──────┴──────╯
//                         │      │      │      │    |   -  │   0  │   ~  │
//                         ╰──────┴──────┴──────╯    ╰──────┴──────┴──────╯

    ___            ___            ___            ___            ___            ___                &kp LBKT       &kp N7         &kp N8         &kp N9         &kp RBKT       ___
    ___            &kp LALT       &kp LCTRL      &kp LGUI       &kp LSHFT      ___                &kp SEMI       &kp N4         &kp N5         &kp N6         &kp SEMI       ___
    ___            ___            ___            ___            ___            ___                &kp BSLH       &kp N1         &kp N2         &kp N3         &kp EQUAL      ___
                                                ___            ___            ___                &kp MINUS      &kp N0         &kp DOT
            >;

        };

        sym_layer {
            label = "SYM";
            bindings = <
//    ╭──────┬──────┬──────┬──────┬──────┬──────╮    ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    │      │   {  │   &  │   *  │   -  │   }  │    │      │      │      │      │      |      |
//    ├──────┼──────┼──────┼──────┼──────┼──────┤    ├──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │   ;  │   $  │   %  │   ^  │   =  │    │      │ RSHFT│ RGUI │ RCTRL│ RALT │      │
//    ├──────┼──────┼──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │   ~  │   !  │   @  │   #  │   |  │    │      │      │      │      │      │      │
//    ╰──────┴──────┴──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┴──────┴──────╯
//                         │   (  │   )  │   _  │    |      │      │      │
//                         ╰──────┴──────┴──────╯    ╰──────┴──────┴──────╯

    ___            &kp LBRC       &kp AMPS       &kp STAR       &kp MINUS       &kp RBRC          ___            ___            ___            ___            ___            ___
    ___            &kp SEMI       &kp DOLLAR     &kp PRCNT      &kp CARET      &kp EQUAL          ___            &kp RSHFT      &kp RGUI       &kp RCTRL      &kp RALT       ___
    ___            &kp TILDE      &kp EXCL       &kp AT         &kp HASH       &kp PIPE           ___            ___            ___            ___            ___            ___
                                                ___            ___            ___                ___            ___            ___
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
//    ╭──────┬──────┬──────┬──────┬──────┬──────╮    ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    │      │ QUIT | CLOSE│ CMD+`│      │  ESC │    │ TABP │ TABN │ YSPCP│ YSPCN│ MCN  │BS_DEL│
//    ├──────┼──────┼──────┼──────┼──────┼──────┤    ├──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │ LOPT | LCTRL│ LCMD │ LSHFT│ SCRN │    │ LEFT │ DOWN │  UP  │ RIGHT│ MCP  │      |
//    ├──────┼──────┼──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │ UNDO │ CUT  │ COPY │ PASTE│ SCR2 |    │ HOME │ PGDN │ PGUP │  END │      │      │
//    ╰──────┴──────┴──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┴──────┴──────╯
//                         │      │      │      │    | BACK │ FWD  │      │
//                         ╰──────┴──────┴──────╯    ╰──────┴──────┴──────╯
    ___            &kp RG(Q)      &kp RG(W)      &kp LG(GRAVE)  ___            &kp ESC            &kp TABP       &kp TABN       &kp YSPCP      &kp YSPCN      &kp MCN        &bs_del
    ___            &kp LALT       &kp LCTRL      &kp LGUI       &kp LSHFT      &kp SCRN           &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT      &kp MCP        ___
    ___            &kp RG(Z)      &kp RG(X)      &kp RG(C)      &kp RG(V)      &kp SCR2           &kp HOME       &kp PG_DN      &kp PG_UP      &kp END        ___            ___
                                                ___            ___            ___                &kp BACK       &kp FWD        ___
            >;
        };

        func_layer {
            label = "FUNC";
            bindings = <
//    ╭──────┬──────┬──────┬──────┬──────┬──────╮    ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    │      │  F1  │  F2  │  F3  │  F4  │  F5  │    │  F6  │  F7  │  F8  │  F9  │  F10 │      │
//    ├──────┼──────┼──────┼──────┼──────┼──────┤    ├──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │ BT 0 │ BT 1 │ BT 2 │ BT 3 │BT CLR│    │ MUTE │ VOL -│ VOL +│      │  F11 │      |
//    ├──────┼──────┼──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │      │      │      │      │      │    │      │      │      │      │  F12 │      │
//    ╰──────┴──────┴──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┴──────┴──────╯
//                  │sys_reset│bootloader│      │    |      ||bootloader│sys_reset│
//                         ╰──────┴──────┴──────╯    ╰──────┴──────┴──────╯

    ___            &kp F1         &kp F2         &kp F3         &kp F4         &kp F5             &kp F6         &kp F7         &kp F8         &kp F9         &kp F10        ___
    ___            ___            ___            ___            ___            ___                &kp C_MUTE     &kp C_VOL_DN   &kp C_VOL_UP   ___            &kp F11        ___
    ___            &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_CLR         ___            ___            ___            ___            &kp F12        ___
                                                &sys_reset     &bootloader    ___                ___            &bootloader    &sys_reset
            >;
        };

//         mouse_layer {
//             label = "MSE";
//             bindings = <
// //    ╭──────┬──────┬──────┬──────┬──────┬──────╮    ╭──────┬──────┬──────┬──────┬──────┬──────╮
// //    │      │      │      │      │      │      │    │      │ MW_DN│ MW_UP│      │      │      │
// //    ├──────┼──────┼──────┼──────┼──────┼──────┤    ├──────┼──────┼──────┼──────┼──────┼──────┤
// //    │      │      │      │      │      │      │    │ M_LFT│ M_DN │ M_UP │ M_RGT│      │      |
// //    ├──────┼──────┼──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┼──────┼──────┤
// //    │      │      │      │      │      │      │    │      │      │      │      │      │      │
// //    ╰──────┴──────┴──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┴──────┴──────╯
// //                         |      │      |      |    | LCLK │ RCLK │      |
// //                         ╰──────┴──────┴──────╯    ╰──────┴──────┴──────╯

//     ___            ___            ___            ___            ___            ___                ___            &mwh S_DOWN    &mwh S_UP      ___            ___            ___
//     ___            &kp LALT       &kp LCTRL      &kp LGUI       &kp LSHFT      ___                &mmv M_LEFT    &mmv M_DOWN    &mmv M_UP      &mmv M_RIGHT   ___            ___
//     ___            ___            ___            ___            ___            ___         ___            ___            ___            ___            ___            ___
//                                                 ___            ___            ___                &mkp LCLK      &mkp RCLK      ___
//             >;
//         };
    };
};

// blank layout
//    ╭──────┬──────┬──────┬──────┬──────┬──────╮    ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    │      │      │      │      │      │      │    │      │      │      │      │      │      │
//    ├──────┼──────┼──────┼──────┼──────┼──────┤    ├──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │      │      │      │      │      │    │      │      │      │      │      │      │
//    ├──────┼──────┼──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┼──────┼──────┤
//    │      │      │      │      │      │      │    │      │      │      │      │      │      │
//    ╰──────┴──────┴──────┼──────┼──────┼──────|    |──────┼──────┼──────┼──────┴──────┴──────╯
//                         │      │      │      │    |      │      │      │
//                         ╰──────┴──────┴──────╯    ╰──────┴──────┴──────╯
